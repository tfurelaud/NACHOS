#ifdef CHANGED

#include "thread.h"

struct{
  int func;
  int argv;
}argument;

static Semaphore *wait = new Semaphore("wait",0);

int do_ThreadCreate(int f, int arg){
  Thread *t = new Thread("ThreadCreate");

  if(t==null){
    printf("Thread non created\n");
    return -1;
  }

  argument *args = new argument;

  args->func = f;
  args->argv = arg;

  wait->P();
  
  t->Fork(StartUserThread,(void) args);

  return 0;
}

static void StartUserThread(void *schmurtz){
  argument *args = (argument *) schmurtz;

  for(int i=0; i<NumTotalRegs;i++){
    machine->WriteRegister(i,0);
  }

  DEBUG('x', "function args %d\n", args->func);
  DEBUG('x', "argv args %d\n", args->argv);
  machine->WriteRegister(PCReg, args->func);
  machine->WriteRegister(4, args->argv);
  DEBUG('x', "NextPCReg %d\n", args->func+4);
  machine->WriteRegister(NextPCReg, (args->func)+4);
  
  machine->Run();
  wait->V();
}

int do_ThreadExit(){
  
  currentThread->Finish();
}

#endif //CHANGED
